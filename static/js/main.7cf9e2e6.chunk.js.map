{"version":3,"sources":["core/firebase.js","components/Auth/LogInPage.js","components/Auth/Auth.js","components/Nav/Nav.js","core/customHooks/useSettings.js","components/Database/AddNewJob.js","components/Database/Job.js","components/Database/JobList.js","components/Database/EditItem/EditItem.js","core/getUpdatedJobsInfo.js","core/setJobsListToFB.js","core/setJobsInfoToFB.js","components/Settings/Settings.js","components/Database/Main.js","App.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","LoginPage","email","setEmail","setUserName","userName","password","setPassword","handleLogin","handleSignUp","hasAccount","setHasAccount","emailError","passwordError","className","type","autoFocus","required","value","onChange","event","target","data-back","data-front","onClick","Auth","handleSetUser","useState","setEmailError","setPasswordError","clearErrors","addUserName","auth","currentUser","updateProfile","displayName","createCollection","id","collection","doc","set","authListener","onAuthStateChanged","user","console","log","userInfo","uid","useEffect","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","then","result","Nav","showJobAddScreen","showJobListPage","userInputSearch","setUserInputSearch","setShowSettings","showSettings","signOut","useSettings","sourcesListOfVacancy","resultsListOfInterviews","cityOfCompanyWhereApplied","AddNewJob","handleAddJobToList","companyName","setCompanyName","companyCity","setCompanyCity","applyDate","setApplyDate","sourceWhereApplied","setSourceWhereApplied","setResult","comment","setComment","submitAllInputs","preventDefault","newComment","company","city","source","date","comments","onSubmit","length","map","key","Job","fullInfoCompaniesList","handleDeleteCompanyFromList","editJob","jobInfo","JobList","listOfCompaniesTitles","filteredJObList","filter","toLowerCase","includes","EditItem","jobUserWantsToEdit","handleEditWindowToggler","addCommentToTheJobInfo","userWantsToAddComment","setUserWantsToAddComment","commentDate","setCommentDate","setNewComment","showComments","Object","entries","arr","updatedJob","getUpdatedJobsInfo","fullJobsInfoList","keys","reduce","obj","setJobsListToFB","companyList","setJobsInfoToFB","Settings","handleAddNewItemToList","userInputAddNewItem","setUserInputAddNewItem","Main","setFullInfoCompaniesList","setListOfCompaniesTitles","setJobUserWantsToEdit","userAddingNewJob","setUserAddingNewJob","userWantsToEditItem","setUserWantsToEditItem","getInfoFromFirebase","onSnapshot","data","job","newFullList","newListOfCompanies","updatedCompanyList","item","updatedJobsInfo","oldList","App","setUser","ReactDOM","render","document","getElementById"],"mappings":"0ZAcaA,G,YAAOC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,8CAOMC,EAFET,IAASU,YCiFXC,EA/FG,SAAC,GAaZ,IAZLC,EAYI,EAZJA,MACAC,EAWI,EAXJA,SACAC,EAUI,EAVJA,YACAC,EASI,EATJA,SACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,YACAC,EAKI,EALJA,aACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,WACAC,EACI,EADJA,cAEA,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,gBACXJ,GACA,2BAAOI,UAAU,eACf,2BACEA,UAAU,cACVC,KAAK,OACLC,WAAS,EACTC,UAAQ,EACRC,MAAOb,EACPc,SAAU,SAACC,GAAD,OAAWhB,EAAYgB,EAAMC,OAAOH,UAEhD,yBAAKJ,UAAU,cAAf,cAIJ,2BAAOA,UAAU,eACf,2BACEA,UAAU,cACVC,KAAK,OACLC,WAAS,EACTC,UAAQ,EACRC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAWjB,EAASiB,EAAMC,OAAOH,UAE7C,yBAAKJ,UAAU,cAAf,eAGF,uBAAGA,UAAU,YAAYF,GACzB,2BAAOE,UAAU,eACf,2BACEA,UAAU,cACVC,KAAK,WACLE,UAAQ,EACRC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAWb,EAAYa,EAAMC,OAAOH,UAEhD,yBAAKJ,UAAU,cAAf,aAGF,uBAAGA,UAAU,YAAYD,IAG3B,yBAAKC,UAAU,gBACZJ,EACC,oCACE,yBACEY,YAAU,UACVC,aAAW,SACXT,UAAU,MACVU,QAAShB,IAIX,oDACyB,IACvB,0BAAMgB,QAAS,kBAAMb,GAAeD,KAApC,aAIJ,oCACE,yBACEY,YAAU,WACVC,aAAW,UACXT,UAAU,MACVU,QAASf,IAIX,8CACmB,IACjB,0BAAMe,QAAS,kBAAMb,GAAeD,KAApC,gBCuDCe,G,MAzIF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEFC,mBAAS,IAFP,mBAE3BtB,EAF2B,KAEjBD,EAFiB,OAGRuB,mBAAS,IAHD,mBAG3BzB,EAH2B,KAGpBC,EAHoB,OAIFwB,mBAAS,IAJP,mBAI3BrB,EAJ2B,KAIjBC,EAJiB,OAMEoB,mBAAS,IANX,mBAM3Bf,EAN2B,KAMfgB,EANe,OAOQD,mBAAS,IAPjB,mBAO3Bd,EAP2B,KAOZgB,EAPY,OASEF,oBAAS,GATX,mBAS3BjB,EAT2B,KASfC,EATe,KAiB5BmB,EAAc,WAClBF,EAAc,IACdC,EAAiB,KA8CbE,EAAc,WAClB1C,EAAK2C,OAAOC,YAAYC,cAAc,CACpCC,YAAa9B,KAIX+B,EAAmB,SAACC,GAExBtC,EACGuC,WAAW,SACXC,IAAIF,GACJC,WAAW,YACXC,IAAI,gBACJC,IAAI,IACPzC,EACGuC,WAAW,SACXC,IAAIF,GACJC,WAAW,YACXC,IAAI,cACJC,IAAI,KASHC,EAAe,WACnBpD,EAAK2C,OAAOU,oBAAmB,SAACC,GAC9B,GAAIA,EAAM,CAnFZxC,EAAS,IACTI,EAAY,IACZH,EAAY,IAmFRwC,QAAQC,IAAIF,GACZ,IAAIG,EAAW,CACb5C,MAAOyC,EAAKzC,MACZ6C,IAAKJ,EAAKI,IACVZ,YAAaQ,EAAKR,aAEpBS,QAAQC,IAAIC,GACZpB,EAAcoB,QAIdpB,EAAc,QASpB,OAJAsB,qBAAU,WACRP,MACC,IAGD,6BACE,kBAAC,EAAD,CACEvC,MAAOA,EACPC,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,SAAUA,EACVC,YAAaA,EACbC,YAxGc,WAClBsB,IACAzC,EACG2C,OACAiB,2BAA2B/C,EAAOI,GAClC4C,OAAM,SAACC,GAEN,OADAP,QAAQC,IAAIM,GACJA,EAAIC,MACV,IAAK,qBACL,IAAK,qBACL,IAAK,sBACHxB,EAAcuB,EAAIE,SAClB,MACF,IAAK,sBACHxB,EAAiBsB,EAAIE,cA2FzB5C,aArFe,WACnBqB,IACAzC,EACG2C,OACAsB,+BAA+BpD,EAAOI,GACtCiD,MAAK,SAACC,GACLpB,EAAiBoB,EAAOb,KAAKI,KAC7BhB,OAEDmB,OAAM,SAACC,GAEN,OADAP,QAAQC,IAAIM,GACJA,EAAIC,MACV,IAAK,4BACL,IAAK,qBACHxB,EAAcuB,EAAIE,SAClB,MACF,IAAK,qBACHxB,EAAiBsB,EAAIE,cAqEzB3C,WAAYA,EACZC,cAAeA,EACfC,WAAYA,EACZC,cAAeA,O,eCrGR4C,G,MAhCH,SAAC,GAON,IANLC,EAMI,EANJA,iBACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAKA,OACE,yBAAKjD,UAAU,OACb,mDACA,yBACEU,QAASkC,EACT5C,UAAU,WACVQ,YAAU,UACVC,aAAW,QAEb,2BACEL,MAAO0C,EACPzC,SAAU,SAACC,GAAD,OAAWyC,EAAmBzC,EAAMC,OAAOH,UAGvD,4BAAQM,QAASmC,GAAjB,qBACA,4BAAQnC,QAAS,kBAAMsC,GAAiBC,KAAxC,YACA,4BAAQvC,QAnBS,WACnBnC,EAAK2C,OAAOgC,YAkBV,aCsCSC,G,MAlEK,SAACtB,GAAU,IAAD,EAC4BhB,mBAAS,CAC/D,WACA,SACA,YACA,uBAL0B,mBACrBuC,EADqB,aAQkCvC,mBAAS,CACrE,QACA,OACA,YAX0B,mBAQrBwC,EARqB,aAcsCxC,mBAAS,CACzE,WACA,UACA,eAjB0B,mBAcrByC,EAdqB,UAwD5B,MAAO,CACL,CACEF,uBACAC,0BACAC,gCCwFSC,EAnJG,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,mBAAoB3B,EAAW,EAAXA,KAAW,EACZhB,mBAAS,IADG,mBAC3C4C,EAD2C,KAC9BC,EAD8B,OAEZ7C,mBAAS,IAFG,mBAE3C8C,EAF2C,KAE9BC,EAF8B,OAGhB/C,mBAAS,IAHO,mBAG3CgD,EAH2C,KAGhCC,EAHgC,OAIEjD,mBAAS,IAJX,mBAI3CkD,EAJ2C,KAIvBC,EAJuB,OAKtBnD,mBAAS,IALa,mBAK3C6B,EAL2C,KAKnCuB,EALmC,OAMpBpD,mBAAS,IANW,mBAM3CqD,EAN2C,KAMlCC,EANkC,OAc9ChB,EAAYtB,GAdkC,sBAU9CuB,EAV8C,EAU9CA,qBAEAE,GAZ8C,EAW9CD,wBAX8C,EAY9CC,2BAIEc,EAAkB,SAAC9D,GACvBA,EAAM+D,iBAEN,IAAIC,EAAa,GACjBA,EAAWT,GAAaK,EAExBpC,QAAQC,IAAIuC,GAUZd,EARoB,CAClBe,QAASd,EACTe,KAAMb,EACNc,OAAQV,EACRW,KAAMb,EACNnB,OAAQA,EACRiC,SAAUL,IAIZZ,EAAe,IACfE,EAAe,IACfK,EAAU,IACVE,EAAW,KAGb,OACE,yBAAKnE,UAAU,WACb,0BACEA,UAAU,WACV4E,SAAU,SAACtE,GAAD,OAAW8D,EAAgB9D,EAAMC,OAAOH,SAElD,yBAAKJ,UAAU,gBACb,2BAAOA,UAAU,UACf,2BACEI,MAAOqD,EACPpD,SAAU,SAACC,GAAD,OAAWoD,EAAepD,EAAMC,OAAOH,UAEnD,yBAAKJ,UAAU,QAAf,kBAGHyD,EAAYoB,OAAS,GACpB,yBAAK7E,UAAU,eACb,2BAAOA,UAAU,UACf,4BACEI,MAAOuD,EACPtD,SAAU,SAACC,GAAD,OAAWsD,EAAetD,EAAMC,OAAOH,SAEjD,4BAAQA,MAAM,IAAd,+BACCkD,EAA0BwB,KAAI,SAACN,GAC9B,OACE,4BAAQO,IAAKP,EAAMpE,MAAOoE,GACvBA,OAKT,yBAAKxE,UAAU,QAAf,4BAIL2D,GACC,yBAAK3D,UAAU,eACb,2BACEG,UAAQ,EACRH,UAAU,aACVI,MAAOyD,EACP5D,KAAK,OACLI,SAAU,SAACC,GAAD,OAAWwD,EAAaxD,EAAMC,OAAOH,UAEjD,yBAAKJ,UAAU,QAAf,eAIH6D,GACC,yBAAK7D,UAAU,eACb,4BACEI,MAAO2D,EACP1D,SAAU,SAACC,GAAD,OAAW0D,EAAsB1D,EAAMC,OAAOH,SAExD,4BAAQA,MAAM,IAAd,+BACCgD,EAAqB0B,KAAI,SAACL,GACzB,OACE,4BAAQM,IAAKN,EAAQrE,MAAOqE,GACzBA,OAKT,yBAAKzE,UAAU,QAAf,yBAIH+D,GACC,yBAAK/D,UAAU,eACZ,IACD,2BAAOA,UAAU,UACf,2BACEI,MAAOsC,EACPrC,SAAU,SAACC,GAAD,OAAW2D,EAAU3D,EAAMC,OAAOH,UAE9C,yBAAKJ,UAAU,QAAf,cAKL0C,GACC,yBAAK1C,UAAU,YACb,8BACEA,UAAU,qBACVI,MAAO8D,EACP7D,SAAU,SAACC,GAAD,OAAW6D,EAAW7D,EAAMC,OAAOH,QAC7CD,UAAQ,IAEV,yBAAKH,UAAU,QAAf,aAIH0C,GACC,yBAAK1C,UAAU,2BACb,yBACEQ,YAAU,cACVC,aAAW,SACXT,UAAU,aACVU,QAAS0D,QCjHRY,EA3BH,SAAC,GAKN,IAJLT,EAII,EAJJA,QACAU,EAGI,EAHJA,sBACAC,EAEI,EAFJA,4BACAC,EACI,EADJA,QAEMC,EAAUH,EAAsBV,GACtC,OACE,wBAAIvE,UAAU,MAAMU,QAAS,kBAAMyE,EAAQC,KACzC,4BAAKb,GACL,2BAAIa,EAAQZ,MACZ,2BAAIY,EAAQV,MACZ,2BAAIU,EAAQX,QACZ,2BAAIW,EAAQ1C,QACZ,yBAAK1C,UAAU,SACb,uBAAGA,UAAU,gBACb,uBACEU,QAAS,WACPwE,EAA4BX,IAE9BvE,UAAU,wBCqBLqF,G,MAvCC,SAAC,GAMV,IALLC,EAKI,EALJA,sBACAL,EAII,EAJJA,sBACAnC,EAGI,EAHJA,gBACAoC,EAEI,EAFJA,4BACAC,EACI,EADJA,QAKMI,EAAkBD,EAAsBE,QAAO,SAACjB,GACpD,OAAOA,EAAQkB,cAAcC,SAAS5C,EAAgB2C,kBAExD,OACE,wBAAIzF,UAAU,YACZ,wBAAIA,UAAU,cACZ,2CACA,mCACA,mCACA,qCACA,qCACA,sCACA,2CAEDuF,EAAgBT,KAAI,SAACP,GACpB,OACE,kBAAC,EAAD,CACEA,QAASA,EACTU,sBAAuBA,EACvBF,IAAKR,EACLW,4BAA6BA,EAC7BC,QAASA,UCgENQ,G,MAhGE,SAAC,GAIX,IAHLC,EAGI,EAHJA,mBACAC,EAEI,EAFJA,wBACAC,EACI,EADJA,uBACI,EACsDjF,oBAAS,GAD/D,mBACGkF,EADH,KAC0BC,EAD1B,OAEkCnF,mBAAS,IAF3C,mBAEGoF,EAFH,KAEgBC,EAFhB,OAGgCrF,mBAAS,IAHzC,mBAGGyD,EAHH,KAGe6B,EAHf,KAKAC,EAAeC,OAAOC,QAAQV,EAAmBjB,UAAUG,KAAI,SAACyB,GAClE,OACE,yBAAKvG,UAAU,eAAe+E,IAAKwB,EAAI,IACrC,yBAAKvG,UAAU,gBACb,oCACA,2BAAIuG,EAAI,KAEV,yBAAKvG,UAAU,gBACb,wCACA,2BAAIuG,EAAI,SAehB,OACE,yBAAKvG,UAAU,eACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,eACb,4CACA,4BAAQU,QAASmF,GAAjB,UAEF,yBAAK7F,UAAU,0BACb,yBAAKA,UAAU,gCACb,yBAAKA,UAAU,aACb,6CACA,2BAAI4F,EAAmBrB,UAEzB,yBAAKvE,UAAU,aACb,qCACA,2BAAI4F,EAAmBpB,OAEzB,yBAAKxE,UAAU,aACb,6CACA,2BAAI4F,EAAmBlB,OAEzB,yBAAK1E,UAAU,aACb,wCACA,2BAAI4F,EAAmBnB,SAEzB,yBAAKzE,UAAU,aACb,wCACA,2BAAI4F,EAAmBlD,UAG3B,yBAAK1C,UAAU,6BACb,0CACCoG,EAED,4BACE1F,QAAS,kBAAMsF,GAA0BD,KAD3C,iBAQHA,GACC,yBAAK/F,UAAU,eACb,8BACE,2BACEK,SAAU,SAACC,GAAD,OAAW4F,EAAe5F,EAAMC,OAAOH,QACjDA,MAAO6F,EACPhG,KAAK,SAEP,2BACEG,MAAOkE,EACPjE,SAAU,SAACC,GAAD,OAAW6F,EAAc7F,EAAMC,OAAOH,UAElD,4BAAQM,QA/DQ,SAACJ,GAC3BA,EAAM+D,iBACN,IAAImC,EAAaZ,EACjBY,EAAW7B,SAASsB,GAAe3B,EAEnCwB,EAAuBU,GACvBR,GAA0BD,KAyDhB,aC/ECU,EATY,SAACC,EAAkBnC,GAC5C,OAAO8B,OAAOM,KAAKD,GAAkBE,QAAO,SAACC,EAAK9B,GAIhD,OAHIA,IAAQR,IACVsC,EAAI9B,GAAO2B,EAAiB3B,IAEvB8B,IACN,KCGUC,EATS,SAACjF,EAAMkF,GAC7B9H,EACGuC,WAAW,SACXC,IAAII,EAAKI,KACTT,WAAW,YACXC,IAAI,cACJC,IAAI,CAAEqF,iBCGIC,EATS,SAACnF,EAAM6E,GAC7BzH,EACGuC,WAAW,SACXC,IAAII,EAAKI,KACTT,WAAW,YACXC,IAAI,gBACJC,IAAIgF,IC0CMO,G,MA9CE,SAAC,GAAc,IAAZpF,EAAW,EAAXA,KAAW,EAQzBsB,EAAYtB,GARa,sBAGzBuB,EAHyB,EAGzBA,qBACAC,EAJyB,EAIzBA,wBACAC,EALyB,EAKzBA,0BACA4D,EANyB,EAMzBA,uBANyB,EAUyBrG,mBAAS,IAVlC,mBAUtBsG,EAVsB,KAUDC,EAVC,KAY7B,OACE,yBAAKpH,UAAU,oBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,eACb,4BACGoD,EAAqB0B,KAAI,SAACL,GAAD,OACxB,wBAAIM,IAAKN,GAASA,OAGtB,4BAAQ/D,QAAS,kBAAMwG,EAAuBC,KAC3C,IADH,wBAIA,2BACE9G,SAAU,SAACC,GAAD,OAAW8G,EAAuB9G,EAAMC,OAAOH,WAG7D,yBAAKJ,UAAU,eACZqD,EAAwByB,KAAI,SAACpC,GAAD,OAC3B,wBAAIqC,IAAKrC,GAASA,OAGtB,yBAAK1C,UAAU,aACZsD,EAA0BwB,KAAI,SAACN,GAAD,OAC7B,wBAAIO,IAAKP,GAAOA,YC+Gf6C,EA5IF,SAAC,GAAc,IAAZxF,EAAW,EAAXA,KAAW,EACiChB,mBAAS,MAD1C,mBAClBoE,EADkB,KACKqC,EADL,OAEiCzG,mBAAS,IAF1C,mBAElByE,EAFkB,KAEKiC,EAFL,OAG2B1G,mBAAS,MAHpC,mBAGlB+E,EAHkB,KAGE4B,EAHF,OAKuB3G,oBAAS,GALhC,mBAKlB4G,EALkB,KAKAC,EALA,OAM6B7G,oBAAS,GANtC,mBAMlB8G,EANkB,KAMGC,EANH,OAOe/G,oBAAS,GAPxB,mBAOlBoC,EAPkB,KAOJD,EAPI,OASqBnC,mBAAS,IAT9B,mBASlBiC,EATkB,KASDC,EATC,KAenBF,EAAkB,WACtB6E,GAAoB,IAGtBxF,qBAAU,WACR2F,IACA/F,QAAQC,IAAI,SACX,IAEHG,qBAAU,WACJoD,EAAsBT,OAAS,IACjC/C,QAAQC,IAAI,mBACZ+E,EAAgBjF,EAAMyD,IAEpBL,IACF+B,EAAgBnF,EAAMoD,GACtBnD,QAAQC,IAAI,eAEb,CAACuD,EAAuBL,IAE3B,IAAM4C,EAAsB,WAC1B5I,EACGuC,WAAW,SACXC,IAAII,EAAKI,KACTT,WAAW,YACXC,IAAI,gBACJqG,YAAW,SAACrG,GACX6F,EAAyB7F,EAAIsG,WAGjC9I,EACGuC,WAAW,SACXC,IAAII,EAAKI,KACTT,WAAW,YACXC,IAAI,cACJqG,YAAW,SAACrG,GACNA,EAAIsG,OAAOhB,aAGhBQ,EAAyB9F,EAAIsG,OAAOhB,iBAiCpClB,EAA0B,WAC1B8B,GACFH,EAAsB,MAExBI,GAAwBD,IAc1B,OACE,6BACE,kBAAC,EAAD,CACE/E,iBAjGmB,WACvB8E,GAAoB,IAiGhB7E,gBAAiBA,EACjBC,gBAAiBA,EACjBC,mBAAoBA,EACpBE,aAAcA,EACdD,gBAAiBA,IAElByE,EACC,kBAAC,EAAD,CAAWjE,mBA3CU,SAACwE,GAC1B,IAAMC,EAAW,eAAQhD,GAIzB,GAHAgD,EAAYD,EAAIzD,SAAWyD,EAC3BV,EAAyBW,IAErB3C,EAAsBI,SAASsC,EAAIzD,SAAvC,CAIA,IAAM2D,EAAkB,sBAAO5C,GAAP,CAA8B0C,EAAIzD,UAC1DgD,EAAyBW,GACzBrF,MAgCuDhB,KAAMA,IAEzD,kBAAC,EAAD,CACEyD,sBAAuBA,EACvBL,sBAAuBA,EACvBnC,gBAAiBA,EACjBoC,4BAhE4B,SAACX,GACnC,IAAM4D,EAAqB7C,EAAsBE,QAAO,SAAC4C,GACvD,OAAOA,IAAS7D,KAElBgD,EAAyBY,GAEzB,IAAME,EAAkB5B,EAAmBxB,EAAuBV,GAClE+C,EAAyBe,GAEY,IAAjC/C,EAAsBT,SACxB/C,QAAQC,IAAI,WACZ+E,EAAgBjF,EAAMsG,KAsDlBhD,QA7Bc,SAACC,GACrBoC,EAAsBpC,GACtBS,OA+BG8B,GACC,kBAAC,EAAD,CACE/B,mBAAoBA,EACpBC,wBAAyBA,EACzBC,uBAhCuB,SAACU,GAC9B,IAAI8B,EAAO,eAAQrD,GACnBqD,EAAQ9B,EAAWjC,SAAWiC,EAC9Bc,EAAyBgB,MAiCtBrF,GAAgB,kBAAC,EAAD,CAAUpB,KAAMA,MChIxB0G,EAdH,WAAO,IAAD,EACQ1H,mBAAS,IADjB,mBACTgB,EADS,KACH2G,EADG,KAOhB,OACE,yBAAKxI,UAAU,OACZ6B,EAAO,kBAAC,EAAD,CAAMA,KAAMA,IAAW,kBAAC,EAAD,CAAMjB,cANnB,SAACiB,GACrB2G,EAAQ3G,QCJZ4G,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.7cf9e2e6.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/firebase-auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBtfXEAOyCoi8v63T4E0H_TdJfPyR6rZkw\",\r\n  authDomain: \"job-base-70122.firebaseapp.com\",\r\n  databaseURL: \"https://job-base-70122.firebaseio.com\",\r\n  projectId: \"job-base-70122\",\r\n  storageBucket: \"job-base-70122.appspot.com\",\r\n  messagingSenderId: \"70839232285\",\r\n  appId: \"1:70839232285:web:f5261f082e25a57e33a3f4\",\r\n};\r\n\r\nexport const fire = firebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.firestore();\r\n\r\nexport default database;\r\n","import React from \"react\";\r\n\r\nconst LoginPage = ({\r\n  email,\r\n  setEmail,\r\n  setUserName,\r\n  userName,\r\n  password,\r\n  setPassword,\r\n  handleLogin,\r\n  handleSignUp,\r\n  hasAccount,\r\n  setHasAccount,\r\n  emailError,\r\n  passwordError,\r\n}) => {\r\n  return (\r\n    <div className=\"loginContainer\">\r\n      <div className=\"input-login\">\r\n        {!hasAccount && (\r\n          <label className=\"login-label\">\r\n            <input\r\n              className=\"login-input\"\r\n              type=\"text\"\r\n              autoFocus\r\n              required\r\n              value={userName}\r\n              onChange={(event) => setUserName(event.target.value)}\r\n            />\r\n            <div className=\"label-text\">Your Name</div>\r\n          </label>\r\n        )}\r\n\r\n        <label className=\"login-label\">\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"text\"\r\n            autoFocus\r\n            required\r\n            value={email}\r\n            onChange={(event) => setEmail(event.target.value)}\r\n          />\r\n          <div className=\"label-text\">Your Email</div>\r\n        </label>\r\n\r\n        <p className=\"errorMsg\">{emailError}</p>\r\n        <label className=\"login-label\">\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            required\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n          />\r\n          <div className=\"label-text\">Password</div>\r\n        </label>\r\n\r\n        <p className=\"errorMsg\">{passwordError}</p>\r\n      </div>\r\n\r\n      <div className=\"btnContainer\">\r\n        {hasAccount ? (\r\n          <>\r\n            <div\r\n              data-back=\"Sing In\"\r\n              data-front=\"Log In\"\r\n              className=\"btn\"\r\n              onClick={handleLogin}\r\n            >\r\n              {/* Sing In */}\r\n            </div>\r\n            <p>\r\n              Don't have an account?{\" \"}\r\n              <span onClick={() => setHasAccount(!hasAccount)}>Sign Up</span>\r\n            </p>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div\r\n              data-back=\"Register\"\r\n              data-front=\"Sign Up\"\r\n              className=\"btn\"\r\n              onClick={handleSignUp}\r\n            >\r\n              {/* Sign Up */}\r\n            </div>\r\n            <p>\r\n              Have an Account?{\" \"}\r\n              <span onClick={() => setHasAccount(!hasAccount)}>Sign In</span>\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fire } from \"../../core/firebase\";\r\nimport LoginPage from \"./LogInPage\";\r\nimport database from \"../../core/firebase\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = ({ handleSetUser }) => {\r\n  //   const [user, setUser] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const [hasAccount, setHasAccount] = useState(true);\r\n\r\n  const clearInputs = () => {\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setUserName(\"\");\r\n  };\r\n\r\n  const clearErrors = () => {\r\n    setEmailError(\"\");\r\n    setPasswordError(\"\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((err) => {\r\n        console.log(err);\r\n        switch (err.code) {\r\n          case \"auth/invalid-email\":\r\n          case \"auth/user-disabled\":\r\n          case \"auth/user-not-found\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/wrong-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    clearErrors();\r\n    fire\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((result) => {\r\n        createCollection(result.user.uid);\r\n        addUserName();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        switch (err.code) {\r\n          case \"auth/email-already-in-use\":\r\n          case \"auth/invalid-email\":\r\n            setEmailError(err.message);\r\n            break;\r\n          case \"auth/weak-password\":\r\n            setPasswordError(err.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n\r\n  const addUserName = () => {\r\n    fire.auth().currentUser.updateProfile({\r\n      displayName: userName,\r\n    });\r\n  };\r\n\r\n  const createCollection = (id) => {\r\n    // const defaoultCitiesToApplyForNewUser = [ ]\r\n    database\r\n      .collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"userData\")\r\n      .doc(\"fullJobsInfo\")\r\n      .set({});\r\n    database\r\n      .collection(\"users\")\r\n      .doc(id)\r\n      .collection(\"userData\")\r\n      .doc(\"listOfJobs\")\r\n      .set({});\r\n    // database\r\n    //   .collection(\"users\")\r\n    //   .doc(id)\r\n    //   .collection(\"userData\")\r\n    //   .doc(\"listOfJobs\")\r\n    //   .set({});\r\n  };\r\n\r\n  const authListener = () => {\r\n    fire.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        clearInputs();\r\n        console.log(user);\r\n        let userInfo = {\r\n          email: user.email,\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n        };\r\n        console.log(userInfo);\r\n        handleSetUser(userInfo);\r\n        // setUser(user);\r\n      } else {\r\n        // setUser(\"\");\r\n        handleSetUser(\"\");\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    authListener();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <LoginPage\r\n        email={email}\r\n        setEmail={setEmail}\r\n        setUserName={setUserName}\r\n        userName={userName}\r\n        password={password}\r\n        setPassword={setPassword}\r\n        handleLogin={handleLogin}\r\n        handleSignUp={handleSignUp}\r\n        hasAccount={hasAccount}\r\n        setHasAccount={setHasAccount}\r\n        emailError={emailError}\r\n        passwordError={passwordError}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { fire } from \"../../core/firebase\";\r\nimport \"./Nav.css\";\r\n\r\nconst Nav = ({\r\n  showJobAddScreen,\r\n  showJobListPage,\r\n  userInputSearch,\r\n  setUserInputSearch,\r\n  setShowSettings,\r\n  showSettings,\r\n}) => {\r\n  const handleLogOut = () => {\r\n    fire.auth().signOut();\r\n  };\r\n  return (\r\n    <div className=\"nav\">\r\n      <h3> Welcome back, User</h3>\r\n      <div\r\n        onClick={showJobAddScreen}\r\n        className=\"btn-flip\"\r\n        data-back=\"New Job\"\r\n        data-front=\"Add\"\r\n      ></div>\r\n      <input\r\n        value={userInputSearch}\r\n        onChange={(event) => setUserInputSearch(event.target.value)}\r\n      />\r\n\r\n      <button onClick={showJobListPage}>Show List of Jobs</button>\r\n      <button onClick={() => setShowSettings(!showSettings)}>Settings</button>\r\n      <button onClick={handleLogOut}>Logout</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { useEffect, useState } from \"react\";\r\nimport database from \"../firebase\";\r\n\r\nconst useSettings = (user) => {\r\n  const [sourcesListOfVacancy, setSourcesListOfVacancy] = useState([\r\n    \"LinkedIn\",\r\n    \"Indeed\",\r\n    \"GlassDoor\",\r\n    \"Website of Company\",\r\n  ]);\r\n\r\n  const [resultsListOfInterviews, setResultsListOfInterviews] = useState([\r\n    \"Offer\",\r\n    \"Sent\",\r\n    \"Reject\",\r\n  ]);\r\n\r\n  const [cityOfCompanyWhereApplied, setCityOfCompanyWhereApplied] = useState([\r\n    \"Montreal\",\r\n    \"Toronto\",\r\n    \"Vancouver\",\r\n  ]);\r\n\r\n  // useEffect(() => {\r\n  //   getCitiesListFromDatabse();\r\n  //   console.log(\"get sities\");\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (cityOfCompanyWhereApplied.length > 0) {\r\n  //     console.log(\"set cities\");\r\n  //     setNewListOfCitiestoFireBase();\r\n  //   }\r\n  // }, [cityOfCompanyWhereApplied]);\r\n\r\n  // const getCitiesListFromDatabse = () => {\r\n  //   database\r\n  //     .collection(\"users\")\r\n  //     .doc(user.uid)\r\n  //     .collection(\"settings\")\r\n  //     .doc(\"cities\")\r\n  //     .onSnapshot((doc) => {\r\n  //       setCityOfCompanyWhereApplied(doc.data().cityOfCompanyWhereApplied);\r\n  //     });\r\n  // };\r\n\r\n  // const setNewListOfCitiestoFireBase = () => {\r\n  //   database\r\n  //     .collection(\"users\")\r\n  //     .doc(user.uid)\r\n  //     .collection(\"userData\")\r\n  //     .doc(\"listOfJobs\")\r\n  //     .set({ cityOfCompanyWhereApplied });\r\n  // };\r\n\r\n  // const handleAddNewItemToList = (item) => {\r\n  //   console.log(item);\r\n  //   setCityOfCompanyWhereApplied([...cityOfCompanyWhereApplied, item]);\r\n  // };\r\n  return [\r\n    {\r\n      sourcesListOfVacancy,\r\n      resultsListOfInterviews,\r\n      cityOfCompanyWhereApplied,\r\n      // handleAddNewItemToList,\r\n    },\r\n  ];\r\n};\r\n\r\nexport default useSettings;\r\n","import React, { useState } from \"react\";\r\nimport \"./AddNewJob.css\";\r\nimport useSettings from \"../../core/customHooks/useSettings\";\r\n\r\nconst AddNewJob = ({ handleAddJobToList, user }) => {\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [companyCity, setCompanyCity] = useState(\"\");\r\n  const [applyDate, setApplyDate] = useState(\"\");\r\n  const [sourceWhereApplied, setSourceWhereApplied] = useState(\"\");\r\n  const [result, setResult] = useState(\"\");\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const [\r\n    {\r\n      sourcesListOfVacancy,\r\n      resultsListOfInterviews,\r\n      cityOfCompanyWhereApplied,\r\n    },\r\n  ] = useSettings(user);\r\n\r\n  const submitAllInputs = (event) => {\r\n    event.preventDefault();\r\n\r\n    let newComment = {};\r\n    newComment[applyDate] = comment;\r\n\r\n    console.log(newComment);\r\n\r\n    const fullJobInfo = {\r\n      company: companyName,\r\n      city: companyCity,\r\n      source: sourceWhereApplied,\r\n      date: applyDate,\r\n      result: result,\r\n      comments: newComment,\r\n    };\r\n    handleAddJobToList(fullJobInfo);\r\n\r\n    setCompanyName(\"\");\r\n    setCompanyCity(\"\");\r\n    setResult(\"\");\r\n    setComment(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-job\">\r\n      <form\r\n        className=\"add-form\"\r\n        onSubmit={(event) => submitAllInputs(event.target.value)}\r\n      >\r\n        <div className=\"company-cont\">\r\n          <label className=\"result\">\r\n            <input\r\n              value={companyName}\r\n              onChange={(event) => setCompanyName(event.target.value)}\r\n            />\r\n            <div className=\"text\">Company Name</div>\r\n          </label>\r\n        </div>\r\n        {companyName.length > 2 && (\r\n          <div className=\"option-cont\">\r\n            <label className=\"result\">\r\n              <select\r\n                value={companyCity}\r\n                onChange={(event) => setCompanyCity(event.target.value)}\r\n              >\r\n                <option value=\"\">--Please choose an option--</option>\r\n                {cityOfCompanyWhereApplied.map((city) => {\r\n                  return (\r\n                    <option key={city} value={city}>\r\n                      {city}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n              <div className=\"text\">City where you applied</div>\r\n            </label>\r\n          </div>\r\n        )}\r\n        {companyCity && (\r\n          <div className=\"option-cont\">\r\n            <input\r\n              required\r\n              className=\"date-input\"\r\n              value={applyDate}\r\n              type=\"date\"\r\n              onChange={(event) => setApplyDate(event.target.value)}\r\n            />\r\n            <div className=\"text\">Apply date</div>\r\n          </div>\r\n        )}\r\n\r\n        {applyDate && (\r\n          <div className=\"option-cont\">\r\n            <select\r\n              value={sourceWhereApplied}\r\n              onChange={(event) => setSourceWhereApplied(event.target.value)}\r\n            >\r\n              <option value=\"\">--Please choose an option--</option>\r\n              {sourcesListOfVacancy.map((source) => {\r\n                return (\r\n                  <option key={source} value={source}>\r\n                    {source}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n            <div className=\"text\">Source where applied</div>\r\n          </div>\r\n        )}\r\n\r\n        {sourceWhereApplied && (\r\n          <div className=\"option-cont\">\r\n            {\" \"}\r\n            <label className=\"result\">\r\n              <input\r\n                value={result}\r\n                onChange={(event) => setResult(event.target.value)}\r\n              />\r\n              <div className=\"text\"> Result </div>\r\n            </label>\r\n          </div>\r\n        )}\r\n\r\n        {result && (\r\n          <div className=\"comments\">\r\n            <textarea\r\n              className=\"text-area-comments\"\r\n              value={comment}\r\n              onChange={(event) => setComment(event.target.value)}\r\n              required\r\n            ></textarea>\r\n            <div className=\"text\">Comments</div>\r\n          </div>\r\n        )}\r\n\r\n        {result && (\r\n          <div className=\"submit-bottno-container\">\r\n            <div\r\n              data-back=\"Add to List\"\r\n              data-front=\"Submit\"\r\n              className=\"submit-btn\"\r\n              onClick={submitAllInputs}\r\n            ></div>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddNewJob;\r\n","import React from \"react\";\r\n\r\nconst Job = ({\r\n  company,\r\n  fullInfoCompaniesList,\r\n  handleDeleteCompanyFromList,\r\n  editJob,\r\n}) => {\r\n  const jobInfo = fullInfoCompaniesList[company];\r\n  return (\r\n    <li className=\"job\" onClick={() => editJob(jobInfo)}>\r\n      <h4>{company}</h4>\r\n      <p>{jobInfo.city}</p>\r\n      <p>{jobInfo.date}</p>\r\n      <p>{jobInfo.source}</p>\r\n      <p>{jobInfo.result}</p>\r\n      <div className=\"icons\">\r\n        <i className=\"fas fa-edit\"></i>\r\n        <i\r\n          onClick={() => {\r\n            handleDeleteCompanyFromList(company);\r\n          }}\r\n          className=\"fas fa-trash-alt\"\r\n        ></i>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Job;\r\n","import React from \"react\";\r\nimport Job from \"./Job\";\r\nimport \"./JobList.css\";\r\n\r\nconst JobList = ({\r\n  listOfCompaniesTitles,\r\n  fullInfoCompaniesList,\r\n  userInputSearch,\r\n  handleDeleteCompanyFromList,\r\n  editJob,\r\n}) => {\r\n  // if (!listOfCompanies) {\r\n  //   return null;\r\n  // }\r\n  const filteredJObList = listOfCompaniesTitles.filter((company) => {\r\n    return company.toLowerCase().includes(userInputSearch.toLowerCase());\r\n  });\r\n  return (\r\n    <ul className=\"job-list\">\r\n      <li className=\"job-header\">\r\n        <p>Company Name</p>\r\n        <p>City</p>\r\n        <p>Date</p>\r\n        <p>Source</p>\r\n        <p>Result</p>\r\n        <p>Comment</p>\r\n        <p>Edit/Delete</p>\r\n      </li>\r\n      {filteredJObList.map((company) => {\r\n        return (\r\n          <Job\r\n            company={company}\r\n            fullInfoCompaniesList={fullInfoCompaniesList}\r\n            key={company}\r\n            handleDeleteCompanyFromList={handleDeleteCompanyFromList}\r\n            editJob={editJob}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default JobList;\r\n","import React, { useState } from \"react\";\r\nimport \"./EditItem.css\";\r\n\r\nconst EditItem = ({\r\n  jobUserWantsToEdit,\r\n  handleEditWindowToggler,\r\n  addCommentToTheJobInfo,\r\n}) => {\r\n  const [userWantsToAddComment, setUserWantsToAddComment] = useState(false);\r\n  const [commentDate, setCommentDate] = useState(\"\");\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  let showComments = Object.entries(jobUserWantsToEdit.comments).map((arr) => {\r\n    return (\r\n      <div className=\"comment-info\" key={arr[0]}>\r\n        <div className=\"comment-date\">\r\n          <h4>Date</h4>\r\n          <p>{arr[0]}</p>\r\n        </div>\r\n        <div className=\"comment-text\">\r\n          <h4>Comment:</h4>\r\n          <p>{arr[1]}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const handleAddNewComment = (event) => {\r\n    event.preventDefault();\r\n    let updatedJob = jobUserWantsToEdit;\r\n    updatedJob.comments[commentDate] = newComment;\r\n\r\n    addCommentToTheJobInfo(updatedJob);\r\n    setUserWantsToAddComment(!userWantsToAddComment);\r\n  };\r\n\r\n  return (\r\n    <div className=\"black-cover\">\r\n      <div className=\"edit-window\">\r\n        <div className=\"edit-header\">\r\n          <h1>Company info</h1>\r\n          <button onClick={handleEditWindowToggler}>Close</button>\r\n        </div>\r\n        <div className=\"company-data-container\">\r\n          <div className=\"detailed-company-information\">\r\n            <div className=\"info-cont\">\r\n              <h4>Company name:</h4>\r\n              <p>{jobUserWantsToEdit.company}</p>\r\n            </div>\r\n            <div className=\"info-cont\">\r\n              <h4>City:</h4>\r\n              <p>{jobUserWantsToEdit.city}</p>\r\n            </div>\r\n            <div className=\"info-cont\">\r\n              <h4>Date applied:</h4>\r\n              <p>{jobUserWantsToEdit.date}</p>\r\n            </div>\r\n            <div className=\"info-cont\">\r\n              <h4>Source: </h4>\r\n              <p>{jobUserWantsToEdit.source}</p>\r\n            </div>\r\n            <div className=\"info-cont\">\r\n              <h4>Result: </h4>\r\n              <p>{jobUserWantsToEdit.result}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"comments-header-container\">\r\n            <h4>Comments: </h4>\r\n            {showComments}\r\n\r\n            <button\r\n              onClick={() => setUserWantsToAddComment(!userWantsToAddComment)}\r\n            >\r\n              Add Comment\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {userWantsToAddComment && (\r\n          <div className=\"add-comment\">\r\n            <form>\r\n              <input\r\n                onChange={(event) => setCommentDate(event.target.value)}\r\n                value={commentDate}\r\n                type=\"date\"\r\n              />\r\n              <input\r\n                value={newComment}\r\n                onChange={(event) => setNewComment(event.target.value)}\r\n              />\r\n              <button onClick={handleAddNewComment}>Add</button>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditItem;\r\n","import React from \"react\";\r\n\r\nconst getUpdatedJobsInfo = (fullJobsInfoList, company) => {\r\n  return Object.keys(fullJobsInfoList).reduce((obj, key) => {\r\n    if (key !== company) {\r\n      obj[key] = fullJobsInfoList[key];\r\n    }\r\n    return obj;\r\n  }, {});\r\n};\r\n\r\nexport default getUpdatedJobsInfo;\r\n","import database from \"./firebase\";\r\n\r\nconst setJobsListToFB = (user, companyList) => {\r\n  database\r\n    .collection(\"users\")\r\n    .doc(user.uid)\r\n    .collection(\"userData\")\r\n    .doc(\"listOfJobs\")\r\n    .set({ companyList });\r\n};\r\n\r\nexport default setJobsListToFB;\r\n","import database from \"./firebase\";\r\n\r\nconst setJobsInfoToFB = (user, fullJobsInfoList) => {\r\n  database\r\n    .collection(\"users\")\r\n    .doc(user.uid)\r\n    .collection(\"userData\")\r\n    .doc(\"fullJobsInfo\")\r\n    .set(fullJobsInfoList);\r\n};\r\n\r\nexport default setJobsInfoToFB;\r\n","import React, { useState } from \"react\";\r\nimport \"./Settings.css\";\r\nimport useSettings from \"../../core/customHooks/useSettings\";\r\n\r\nconst Settings = ({ user }) => {\r\n  const [\r\n    {\r\n      sourcesListOfVacancy,\r\n      resultsListOfInterviews,\r\n      cityOfCompanyWhereApplied,\r\n      handleAddNewItemToList,\r\n    },\r\n  ] = useSettings(user);\r\n\r\n  const [userInputAddNewItem, setUserInputAddNewItem] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"black-background\">\r\n      <div className=\"settings\">\r\n        <div className=\"settings-container\">\r\n          <div className=\"source-list\">\r\n            <ul>\r\n              {sourcesListOfVacancy.map((source) => (\r\n                <li key={source}>{source}</li>\r\n              ))}\r\n            </ul>\r\n            <button onClick={() => handleAddNewItemToList(userInputAddNewItem)}>\r\n              {\" \"}\r\n              Add new item to list\r\n            </button>\r\n            <input\r\n              onChange={(event) => setUserInputAddNewItem(event.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"result-list\">\r\n            {resultsListOfInterviews.map((result) => (\r\n              <li key={result}>{result}</li>\r\n            ))}\r\n          </div>\r\n          <div className=\"city-list\">\r\n            {cityOfCompanyWhereApplied.map((city) => (\r\n              <li key={city}>{city}</li>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport AddNewJob from \"./AddNewJob\";\r\nimport JobList from \"./JobList\";\r\nimport database from \"../../core/firebase\";\r\nimport EditItem from \"./EditItem/EditItem\";\r\n\r\nimport getUpdatedJobsInfo from \"../../core/getUpdatedJobsInfo\";\r\nimport setJobsListToFB from \"../../core/setJobsListToFB\";\r\nimport setJobsInfoToFB from \"../../core/setJobsInfoToFB\";\r\nimport Settings from \"../Settings/Settings\";\r\n\r\nconst Main = ({ user }) => {\r\n  const [fullInfoCompaniesList, setFullInfoCompaniesList] = useState(null);\r\n  const [listOfCompaniesTitles, setListOfCompaniesTitles] = useState([]);\r\n  const [jobUserWantsToEdit, setJobUserWantsToEdit] = useState(null);\r\n\r\n  const [userAddingNewJob, setUserAddingNewJob] = useState(true);\r\n  const [userWantsToEditItem, setUserWantsToEditItem] = useState(false);\r\n  const [showSettings, setShowSettings] = useState(false);\r\n\r\n  const [userInputSearch, setUserInputSearch] = useState(\"\");\r\n\r\n  const showJobAddScreen = () => {\r\n    setUserAddingNewJob(true);\r\n  };\r\n\r\n  const showJobListPage = () => {\r\n    setUserAddingNewJob(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getInfoFromFirebase();\r\n    console.log(\"get\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (listOfCompaniesTitles.length > 0) {\r\n      console.log(\"set CompanyList\");\r\n      setJobsListToFB(user, listOfCompaniesTitles);\r\n    }\r\n    if (fullInfoCompaniesList) {\r\n      setJobsInfoToFB(user, fullInfoCompaniesList);\r\n      console.log(\"set Info\");\r\n    }\r\n  }, [listOfCompaniesTitles, fullInfoCompaniesList]);\r\n\r\n  const getInfoFromFirebase = () => {\r\n    database\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .collection(\"userData\")\r\n      .doc(\"fullJobsInfo\")\r\n      .onSnapshot((doc) => {\r\n        setFullInfoCompaniesList(doc.data());\r\n      });\r\n\r\n    database\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .collection(\"userData\")\r\n      .doc(\"listOfJobs\")\r\n      .onSnapshot((doc) => {\r\n        if (!doc.data().companyList) {\r\n          return;\r\n        }\r\n        setListOfCompaniesTitles(doc.data().companyList);\r\n      });\r\n  };\r\n\r\n  const handleDeleteCompanyFromList = (company) => {\r\n    const updatedCompanyList = listOfCompaniesTitles.filter((item) => {\r\n      return item !== company;\r\n    });\r\n    setListOfCompaniesTitles(updatedCompanyList);\r\n\r\n    const updatedJobsInfo = getUpdatedJobsInfo(fullInfoCompaniesList, company);\r\n    setFullInfoCompaniesList(updatedJobsInfo);\r\n\r\n    if (listOfCompaniesTitles.length === 1) {\r\n      console.log(\"working\");\r\n      setJobsListToFB(user, updatedCompanyList);\r\n    }\r\n  };\r\n\r\n  const handleAddJobToList = (job) => {\r\n    const newFullList = { ...fullInfoCompaniesList };\r\n    newFullList[job.company] = job;\r\n    setFullInfoCompaniesList(newFullList);\r\n\r\n    if (listOfCompaniesTitles.includes(job.company)) {\r\n      return;\r\n      // Here should be POPUP window that we have already this company\r\n    }\r\n    const newListOfCompanies = [...listOfCompaniesTitles, job.company];\r\n    setListOfCompaniesTitles(newListOfCompanies);\r\n    showJobListPage();\r\n  };\r\n\r\n  const handleEditWindowToggler = () => {\r\n    if (userWantsToEditItem) {\r\n      setJobUserWantsToEdit(null);\r\n    }\r\n    setUserWantsToEditItem(!userWantsToEditItem);\r\n  };\r\n\r\n  const handleEditJob = (jobInfo) => {\r\n    setJobUserWantsToEdit(jobInfo);\r\n    handleEditWindowToggler();\r\n  };\r\n\r\n  const addCommentToTheJobInfo = (updatedJob) => {\r\n    let oldList = { ...fullInfoCompaniesList };\r\n    oldList[updatedJob.company] = updatedJob;\r\n    setFullInfoCompaniesList(oldList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav\r\n        showJobAddScreen={showJobAddScreen}\r\n        showJobListPage={showJobListPage}\r\n        userInputSearch={userInputSearch}\r\n        setUserInputSearch={setUserInputSearch}\r\n        showSettings={showSettings}\r\n        setShowSettings={setShowSettings}\r\n      />\r\n      {userAddingNewJob ? (\r\n        <AddNewJob handleAddJobToList={handleAddJobToList} user={user} />\r\n      ) : (\r\n        <JobList\r\n          listOfCompaniesTitles={listOfCompaniesTitles}\r\n          fullInfoCompaniesList={fullInfoCompaniesList}\r\n          userInputSearch={userInputSearch}\r\n          handleDeleteCompanyFromList={handleDeleteCompanyFromList}\r\n          editJob={handleEditJob}\r\n        />\r\n      )}\r\n\r\n      {userWantsToEditItem && (\r\n        <EditItem\r\n          jobUserWantsToEdit={jobUserWantsToEdit}\r\n          handleEditWindowToggler={handleEditWindowToggler}\r\n          addCommentToTheJobInfo={addCommentToTheJobInfo}\r\n        />\r\n      )}\r\n\r\n      {showSettings && <Settings user={user} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Auth from \"./components/Auth/Auth\";\nimport Main from \"./components/Database/Main\";\n\nconst App = () => {\n  const [user, setUser] = useState(\"\");\n\n  const handleSetUser = (user) => {\n    setUser(user);\n  };\n\n  return (\n    <div className=\"App\">\n      {user ? <Main user={user} /> : <Auth handleSetUser={handleSetUser} />}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}